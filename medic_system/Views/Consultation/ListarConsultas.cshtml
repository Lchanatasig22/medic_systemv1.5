@model List<Consultum>

@{
    ViewData["Title"] = "Listar Consultas";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Lista de consultas</h3>

@if (ViewBag.Error != null)
{
    <div class="alert alert-danger">@ViewBag.Error</div>
}

@if (Model != null && Model.Count > 0)
{
    <div class="form-group">
        <div class="row">
            <div class="col-md-3">
                <label for="opcion">Buscar por</label>
                <select class="form-control" id="opcion">
                    <option value="-2">Listar todo</option>
                    <option value="1">Nombre(s)</option>
                    <option value="2">Número de documento</option>
                    <option value="3">Email</option>
                    <option value="4">Nacionalidad</option>
                </select>
            </div>
            <div class="col-md-5 d-none" id="buscarFields">
                <label>&nbsp;</label>
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="Ingresar criterio de búsqueda" id="buscarCriterio" />
                    <div class="input-group-append">
                        <button class="btn btn-primary" type="button" onclick="onSearch()">Buscar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <hr />

    <div class="table-responsive d-none d-lg-block">
        <table class="table table-bordered table-striped">
            <thead>
                <tr class="table-primary">
                    <th>Acciones</th>
                    <th>Fecha de la consulta</th>
                    <th>Nombre Paciente</th>
                    <th>Especialidad</th>
                    <th>Motivo</th>
                    <th>Enfermedad</th>
                    <th>Historial</th>
                    <th>Estado</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var consulta in Model)
                {
                    <tr id="@consulta.IdConsulta">
                        <td>
                            <a asp-action="VerConsulta" asp-route-id="@consulta.IdConsulta" class="btn btn-outline-success">
                                <i class="fa-regular fa-eye"></i> Visualizar
                            </a>
                        </td>
                        <td>@consulta.FechacreacionConsulta</td>
                        <td>@consulta.PacienteConsultaPNavigation?.PrimernombrePacientes @consulta.PacienteConsultaPNavigation?.PrimerapellidoPacientes</td>
                        <td>@ViewBag.UsuarioEspecialidad</td>
                        <td>@consulta.MotivoConsulta</td>
                        <td>@consulta.EnfermedadConsulta</td>
                        <td>@consulta.HistorialConsulta</td>
                        <td>@consulta.EstadoConsultaC</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="card-columns d-lg-none">
        @foreach (var consulta in Model)
        {
            <div class="card">
                <div class="card-body" data-id="@consulta.IdConsulta">
                    <h5 class="card-title">@consulta.PacienteConsultaPNavigation?.PrimernombrePacientes @consulta.PacienteConsultaPNavigation?.PrimerapellidoPacientes</h5>
                    <p class="card-text"><strong>Fecha de la consulta:</strong> @consulta.FechacreacionConsulta</p>
                    <p class="card-text"><strong>Especialidad:</strong> @ViewBag.UsuarioEspecialidad</p>
                    <p class="card-text"><strong>Motivo:</strong> @consulta.MotivoConsulta</p>
                    <p class="card-text"><strong>Enfermedad:</strong> @consulta.EnfermedadConsulta</p>
                    <p class="card-text"><strong>Historial:</strong> @consulta.HistorialConsulta</p>
                    <p class="card-text"><strong>Estado:</strong> @consulta.EstadoConsultaC</p>
                    <a asp-action="VerConsulta" asp-route-id="@consulta.IdConsulta" class="btn btn-outline-success btn-sm">
                        <i class="fa-regular fa-eye"></i> Visualizar
                    </a>
                </div>
            </div>
        }
    </div>
    <div id="noResults" class="no-results d-none">
        No se encontraron resultados.
    </div>
}
else
{
    <p>No se encontraron consultas.</p>
}

<a asp-action="CrearConsulta" asp-controller="Consultation" class="btn btn-outline-primary" style="margin-left:80%">
    <i class="fa fa-plus"></i> Añadir nueva consulta
</a>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const opcionSelect = document.getElementById('opcion');
            const buscarFields = document.getElementById('buscarFields');
            const buscarBtn = document.getElementById('buscarBtn');
            const buscarCriterio = document.getElementById('buscarCriterio');
            const noResults = document.getElementById('noResults');

            opcionSelect.addEventListener('change', onSearchChanged);
            buscarBtn.addEventListener('click', onSearch);

            function onSearchChanged() {
                if (opcionSelect.value === '-2') {
                    buscarFields.classList.add('d-none');
                    showAllRows();
                    showAllCards();
                    noResults.classList.add('d-none');
                } else {
                    buscarFields.classList.remove('d-none');
                }
            }

            function onSearch() {
                const criterio = buscarCriterio.value.toLowerCase();
                const optionValue = opcionSelect.value;
                const rows = document.querySelectorAll('tbody tr');
                const cards = document.querySelectorAll('.card-body');
                let found = false;

                rows.forEach(row => {
                    const cellValue = getCellValue(row, optionValue).toLowerCase();
                    if (cellValue.includes(criterio)) {
                        row.style.display = '';
                        found = true;
                    } else {
                        row.style.display = 'none';
                    }
                });

                cards.forEach(card => {
                    const cellValue = getCardValue(card, optionValue).toLowerCase();
                    if (cellValue.includes(criterio)) {
                        card.parentElement.style.display = '';
                        found = true;
                    } else {
                        card.parentElement.style.display = 'none';
                    }
                });

                if (!found) {
                    noResults.classList.remove('d-none');
                } else {
                    noResults.classList.add('d-none');
                }
            }

            function getCellValue(row, optionValue) {
                switch (optionValue) {
                    case '1': return row.cells[2].innerText;
                    case '2': return row.cells[3].innerText;
                    case '3': return row.cells[4].innerText;
                    case '4': return row.cells[5].innerText;
                    default: return '';
                }
            }

            function getCardValue(card, optionValue) {
                switch (optionValue) {
                    case '1': return card.querySelector('.card-title').innerText;
                    case '2': return card.querySelector('.card-text:nth-of-type(1)').innerText.split(': ')[1];
                    case '3': return card.querySelector('.card-text:nth-of-type(2)').innerText.split(': ')[1];
                    case '4': return card.querySelector('.card-text:nth-of-type(3)').innerText.split(': ')[1];
                    default: return '';
                }
            }

            function showAllRows() {
                const rows = document.querySelectorAll('tbody tr');
                rows.forEach(row => row.style.display = '');
            }

            function showAllCards() {
                const cards = document.querySelectorAll('.card-body');
                cards.forEach(card => card.parentElement.style.display = '');
            }

            var successMessage = '@TempData["SuccessMessage"]';
            var errorMessage = '@TempData["ErrorMessage"]';

            if (successMessage) {
                Swal.fire({
                    icon: 'success',
                    title: 'Éxito',
                    text: successMessage
                });
            }

            if (errorMessage) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: errorMessage
                });
            }

            window.confirmarEliminar = function (id) {
                Swal.fire({
                    title: '¿Estás seguro?',
                    text: "Esta acción no se puede deshacer.",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, eliminar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        eliminarPaciente(id);
                    }
                });
            };

            function eliminarPaciente(id) {
                const form = document.createElement('form');
                form.method = 'post';
                form.action = '@Url.Action("EliminarConsulta", "Consultation")';

                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'id';
                input.value = id;

                form.appendChild(input);
                document.body.appendChild(form);
                form.submit();
            }
        });
    </script>
}
